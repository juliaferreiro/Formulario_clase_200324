<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Rg3fvZUAAAAASUVORK5CYII=
</value>
  </data>
</root>